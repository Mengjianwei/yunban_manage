package ${packageName}.controller;

import java.util.Map;
import com.ikkong.core.base.BaseController;
import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.system.controller.base.UrlPermissController;
import ${packageName}.model.${modelName};
import ${packageName}.service.${modelName}Service;
import ${packageName}.service.impl.${modelName}ServiceImpl;

/**
 * Generated by Blade.
 * ${func.getTime()}
 */
public class ${modelName}Controller extends UrlPermissController {
	private static String CODE = "${lowerModelName}";
	private static String PERFIX = "${tableName}";
	private static String LIST_SOURCE = "${modelName}.list";
	private static String BASE_PATH = "/platform/${lowerModelName}/";
	
	${modelName}Service service = new ${modelName}ServiceImpl();
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "${lowerModelName}.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "${lowerModelName}_add.html");
	}

	public void edit() {
		String id = getPara(0);
		${modelName} ${lowerModelName} = service.findById(id);
		setAttr("model", JsonKit.toJson(${lowerModelName}));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "${lowerModelName}_edit.html");
	}

	public void view() {
		String id = getPara(0);
		${modelName} ${lowerModelName} = service.findById(id);
		setAttr("model", JsonKit.toJson(${lowerModelName}));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "${lowerModelName}_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		${modelName} ${lowerModelName} = mapping(PERFIX, ${modelName}.class);
		boolean temp = service.save(${lowerModelName});
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		${modelName} ${lowerModelName} = mapping(PERFIX, ${modelName}.class);
		${lowerModelName}.setVersion(${lowerModelName}.getVersion()+1);
		boolean temp = service.update(${lowerModelName});
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
