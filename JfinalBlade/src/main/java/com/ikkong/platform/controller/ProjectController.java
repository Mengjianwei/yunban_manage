package com.ikkong.platform.controller;

import com.ikkong.core.jfinal.ext.kit.JsonKit;
import com.ikkong.platform.meta.intercept.BlogIntercept;
import com.ikkong.platform.meta.intercept.ProjectIntercept;
import com.ikkong.platform.meta.intercept.StudentIntercept;
import com.ikkong.platform.model.Blog;
import com.ikkong.platform.model.Mirror;
import com.ikkong.platform.model.Project;
import com.ikkong.platform.model.Student;
import com.ikkong.platform.service.BlogService;
import com.ikkong.platform.service.MirrorService;
import com.ikkong.platform.service.ProjectService;
import com.ikkong.platform.service.StudentService;
import com.ikkong.platform.service.impl.BlogServiceImpl;
import com.ikkong.platform.service.impl.MirrorServiceImpl;
import com.ikkong.platform.service.impl.ProjectServiceImpl;
import com.ikkong.platform.service.impl.StudentServiceImpl;
import com.ikkong.system.controller.base.UrlPermissController;

/**
 * Generated by Blade.
 * 2016-10-08 15:59:45
 */
public class ProjectController extends UrlPermissController {
	private static String CODE = "project";
	private static String PERFIX = "yb_project";
	private static String LIST_SOURCE = "Project.list";
	private static String BASE_PATH = "/platform/project/";
	
	ProjectService service = new ProjectServiceImpl();
	
	
	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "project.html");
		
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "project_add.html");
	}

	public void edit() {
		String id = getPara(0);
		Project project = service.findById(id);
		setAttr("model", JsonKit.toJson(project));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "project_edit.html");
	}

	public void view() {
		String id = getPara(0);
		Project project = service.findById(id);
		setAttr("model", JsonKit.toJson(project));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "project_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE,new ProjectIntercept());
		renderJson(grid);
	}

	public void save() {
		Project project = mapping(PERFIX, Project.class);
		boolean temp = service.save(project);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		Project project = mapping(PERFIX, Project.class);
		boolean temp = service.update(project);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
